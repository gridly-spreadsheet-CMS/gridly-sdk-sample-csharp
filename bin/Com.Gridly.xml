<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.Gridly</name>
    </assembly>
    <members>
        <member name="T:Com.Gridly.Model.Cell">
             <summary>
             Cell
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.Cell.DependencyStatusEnum">
             <summary>
             Defines DependencyStatus
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Cell.DependencyStatusEnum.UpToDate">
             <summary>
             Enum UpToDate for value: upToDate
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Cell.DependencyStatusEnum.OutOfDate">
             <summary>
             Enum OutOfDate for value: outOfDate
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Cell.DependencyStatusEnum.Unset">
             <summary>
             Enum Unset for value: unset
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Cell.DependencyStatus">
             <summary>
             Gets or Sets DependencyStatus
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Cell.#ctor(System.String,System.Nullable{Com.Gridly.Model.Cell.DependencyStatusEnum},System.Collections.Generic.List{System.String},System.Object)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Cell" /> class.
             </summary>
             <param name="columnId">columnId.</param>
             <param name="dependencyStatus">dependencyStatus.</param>
             <param name="referencedIds">referencedIds.</param>
             <param name="value">value.</param>
            </member>
        <member name="P:Com.Gridly.Model.Cell.ColumnId">
             <summary>
             Gets or Sets ColumnId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Cell.ReferencedIds">
             <summary>
             Gets or Sets ReferencedIds
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Cell.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Cell.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Cell.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Cell.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Cell.Equals(Com.Gridly.Model.Cell)">
             <summary>
             Returns true if Cell instances are equal
             </summary>
             <param name="input">Instance of Cell to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Cell.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Cell.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Database">
             <summary>
             Database
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Database.#ctor(System.String,System.Collections.Generic.List{Com.Gridly.Model.Grid},System.Collections.Generic.List{System.Object},System.String,System.String,Com.Gridly.Model.Project,System.Int64,System.Collections.Generic.List{Com.Gridly.Model.View})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Database" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="grids">grids.</param>
             <param name="groups">groups.</param>
             <param name="id">id.</param>
             <param name="name">name.</param>
             <param name="project">project.</param>
             <param name="projectId">projectId.</param>
             <param name="views">views.</param>
            </member>
        <member name="P:Com.Gridly.Model.Database.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Database.Grids">
             <summary>
             Gets or Sets Grids
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Database.Groups">
             <summary>
             Gets or Sets Groups
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Database.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Database.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Database.Project">
             <summary>
             Gets or Sets Project
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Database.ProjectId">
             <summary>
             Gets or Sets ProjectId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Database.Views">
             <summary>
             Gets or Sets Views
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Database.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Database.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Database.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Database.Equals(Com.Gridly.Model.Database)">
             <summary>
             Returns true if Database instances are equal
             </summary>
             <param name="input">Instance of Database to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Database.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Database.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.NumberFormat">
             <summary>
             NumberFormat
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.NumberFormat.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.NumberFormat.TypeEnum.DECIMAL">
             <summary>
             Enum DECIMAL for value: DECIMAL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.NumberFormat.TypeEnum.INTEGER">
             <summary>
             Enum INTEGER for value: INTEGER
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.NumberFormat.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.NumberFormat.#ctor(System.String,System.Int32,System.Nullable{Com.Gridly.Model.NumberFormat.TypeEnum},System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.NumberFormat" /> class.
             </summary>
             <param name="currencySymbol">currencySymbol.</param>
             <param name="decimalPlaces">decimalPlaces.</param>
             <param name="type">type.</param>
             <param name="use1000Separator">use1000Separator.</param>
            </member>
        <member name="P:Com.Gridly.Model.NumberFormat.CurrencySymbol">
             <summary>
             Gets or Sets CurrencySymbol
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.NumberFormat.DecimalPlaces">
             <summary>
             Gets or Sets DecimalPlaces
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.NumberFormat.Use1000Separator">
             <summary>
             Gets or Sets Use1000Separator
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.NumberFormat.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.NumberFormat.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.NumberFormat.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.NumberFormat.Equals(Com.Gridly.Model.NumberFormat)">
             <summary>
             Returns true if NumberFormat instances are equal
             </summary>
             <param name="input">Instance of NumberFormat to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.NumberFormat.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.NumberFormat.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.CreateDatabase">
             <summary>
             CreateDatabase
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateDatabase.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateDatabase" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="id">id.</param>
             <param name="name">name.</param>
            </member>
        <member name="P:Com.Gridly.Model.CreateDatabase.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateDatabase.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateDatabase.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateDatabase.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateDatabase.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateDatabase.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateDatabase.Equals(Com.Gridly.Model.CreateDatabase)">
             <summary>
             Returns true if CreateDatabase instances are equal
             </summary>
             <param name="input">Instance of CreateDatabase to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateDatabase.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateDatabase.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.CreateBranch">
             <summary>
             CreateBranch
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateBranch.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateBranch" /> class.
             </summary>
             <param name="name">name.</param>
            </member>
        <member name="P:Com.Gridly.Model.CreateBranch.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateBranch.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateBranch.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateBranch.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateBranch.Equals(Com.Gridly.Model.CreateBranch)">
             <summary>
             Returns true if CreateBranch instances are equal
             </summary>
             <param name="input">Instance of CreateBranch to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateBranch.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateBranch.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.UpdateGrid">
             <summary>
             UpdateGrid
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateGrid.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UpdateGrid" /> class.
             </summary>
             <param name="metadata">metadata.</param>
             <param name="name">name.</param>
            </member>
        <member name="P:Com.Gridly.Model.UpdateGrid.Metadata">
             <summary>
             Gets or Sets Metadata
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UpdateGrid.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateGrid.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateGrid.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateGrid.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateGrid.Equals(Com.Gridly.Model.UpdateGrid)">
             <summary>
             Returns true if UpdateGrid instances are equal
             </summary>
             <param name="input">Instance of UpdateGrid to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateGrid.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateGrid.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Branch">
             <summary>
             Branch
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Branch.#ctor(System.Collections.Generic.List{Com.Gridly.Model.ViewColumn},System.String,System.String,System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Branch" /> class.
             </summary>
             <param name="columns">columns.</param>
             <param name="defaultAccessViewId">defaultAccessViewId.</param>
             <param name="description">description.</param>
             <param name="id">id.</param>
             <param name="isMaster">isMaster.</param>
             <param name="metadata">metadata.</param>
             <param name="name">name.</param>
            </member>
        <member name="P:Com.Gridly.Model.Branch.Columns">
             <summary>
             Gets or Sets Columns
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Branch.DefaultAccessViewId">
             <summary>
             Gets or Sets DefaultAccessViewId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Branch.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Branch.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Branch.IsMaster">
             <summary>
             Gets or Sets IsMaster
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Branch.Metadata">
             <summary>
             Gets or Sets Metadata
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Branch.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Branch.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Branch.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Branch.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Branch.Equals(Com.Gridly.Model.Branch)">
             <summary>
             Returns true if Branch instances are equal
             </summary>
             <param name="input">Instance of Branch to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Branch.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Branch.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Privilege">
             <summary>
             Privilege
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Privilege.#ctor(System.String,System.String,System.Int64,System.String,System.String,System.String,System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Privilege" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="extra">extra.</param>
             <param name="id">id.</param>
             <param name="label">label.</param>
             <param name="level">level.</param>
             <param name="name">name.</param>
             <param name="order">order.</param>
             <param name="serviceId">serviceId.</param>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.Extra">
             <summary>
             Gets or Sets Extra
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.Label">
             <summary>
             Gets or Sets Label
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.Level">
             <summary>
             Gets or Sets Level
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.Order">
             <summary>
             Gets or Sets Order
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Privilege.ServiceId">
             <summary>
             Gets or Sets ServiceId
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Privilege.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Privilege.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Privilege.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Privilege.Equals(Com.Gridly.Model.Privilege)">
             <summary>
             Returns true if Privilege instances are equal
             </summary>
             <param name="input">Instance of Privilege to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Privilege.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Privilege.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.UpdateDatabase">
             <summary>
             UpdateDatabase
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UpdateDatabase" /> class.
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UpdateDatabase" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:Com.Gridly.Model.UpdateDatabase.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UpdateDatabase.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.Equals(Com.Gridly.Model.UpdateDatabase)">
             <summary>
             Returns true if UpdateDatabase instances are equal
             </summary>
             <param name="input">Instance of UpdateDatabase to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateDatabase.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Role">
             <summary>
             Role
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Role.#ctor(System.Int64,System.Boolean,System.String,System.String,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{Com.Gridly.Model.Privilege},System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Role" /> class.
             </summary>
             <param name="id">id.</param>
             <param name="isSystemRole">isSystemRole.</param>
             <param name="level">level.</param>
             <param name="name">name.</param>
             <param name="privilegeIds">privilegeIds.</param>
             <param name="privileges">privileges.</param>
             <param name="title">title.</param>
             <param name="type">type.</param>
            </member>
        <member name="P:Com.Gridly.Model.Role.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Role.IsSystemRole">
             <summary>
             Gets or Sets IsSystemRole
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Role.Level">
             <summary>
             Gets or Sets Level
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Role.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Role.PrivilegeIds">
             <summary>
             Gets or Sets PrivilegeIds
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Role.Privileges">
             <summary>
             Gets or Sets Privileges
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Role.Title">
             <summary>
             Gets or Sets Title
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Role.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Role.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Role.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Role.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Role.Equals(Com.Gridly.Model.Role)">
             <summary>
             Returns true if Role instances are equal
             </summary>
             <param name="input">Instance of Role to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Role.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Role.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.CreateGrid">
             <summary>
             CreateGrid
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateGrid.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateGrid" /> class.
             </summary>
             <param name="metadata">metadata.</param>
             <param name="name">name.</param>
             <param name="templateGridId">templateGridId.</param>
            </member>
        <member name="P:Com.Gridly.Model.CreateGrid.Metadata">
             <summary>
             Gets or Sets Metadata
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateGrid.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateGrid.TemplateGridId">
             <summary>
             Gets or Sets TemplateGridId
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateGrid.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateGrid.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateGrid.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateGrid.Equals(Com.Gridly.Model.CreateGrid)">
             <summary>
             Returns true if CreateGrid instances are equal
             </summary>
             <param name="input">Instance of CreateGrid to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateGrid.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateGrid.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Grid">
             <summary>
             Grid
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Grid.#ctor(System.String,System.Collections.Generic.List{Com.Gridly.Model.Grid},System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Grid" /> class.
             </summary>
             <param name="branchId">branchId.</param>
             <param name="branches">branches.</param>
             <param name="customProperties">customProperties.</param>
             <param name="defaultAccessViewId">defaultAccessViewId.</param>
             <param name="groupTagDefinition">groupTagDefinition.</param>
             <param name="id">id.</param>
             <param name="name">name.</param>
             <param name="parentGridId">parentGridId.</param>
             <param name="status">status.</param>
            </member>
        <member name="P:Com.Gridly.Model.Grid.BranchId">
             <summary>
             Gets or Sets BranchId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.Branches">
             <summary>
             Gets or Sets Branches
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.CustomProperties">
             <summary>
             Gets or Sets CustomProperties
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.DefaultAccessViewId">
             <summary>
             Gets or Sets DefaultAccessViewId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.GroupTagDefinition">
             <summary>
             Gets or Sets GroupTagDefinition
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.ParentGridId">
             <summary>
             Gets or Sets ParentGridId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Grid.Status">
             <summary>
             Gets or Sets Status
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Grid.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Grid.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Grid.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Grid.Equals(Com.Gridly.Model.Grid)">
             <summary>
             Returns true if Grid instances are equal
             </summary>
             <param name="input">Instance of Grid to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Grid.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Grid.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Task">
             <summary>
             Task
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.Task.StatusEnum">
             <summary>
             Defines Status
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Task.StatusEnum.Failed">
             <summary>
             Enum Failed for value: failed
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Task.StatusEnum.Successful">
             <summary>
             Enum Successful for value: successful
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Task.StatusEnum.Running">
             <summary>
             Enum Running for value: running
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Task.Status">
             <summary>
             Gets or Sets Status
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Task.#ctor(System.String,System.Nullable{Com.Gridly.Model.Task.StatusEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Task" /> class.
             </summary>
             <param name="id">id.</param>
             <param name="status">status.</param>
            </member>
        <member name="P:Com.Gridly.Model.Task.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Task.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Task.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Task.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Task.Equals(Com.Gridly.Model.Task)">
             <summary>
             Returns true if Task instances are equal
             </summary>
             <param name="input">Instance of Task to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Task.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Task.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.ViewColumn">
             <summary>
             ViewColumn
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.ViewColumn.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.SingleLine">
             <summary>
             Enum SingleLine for value: singleLine
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.MultipleLines">
             <summary>
             Enum MultipleLines for value: multipleLines
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.RichText">
             <summary>
             Enum RichText for value: richText
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Markdown">
             <summary>
             Enum Markdown for value: markdown
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.SingleSelection">
             <summary>
             Enum SingleSelection for value: singleSelection
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.MultipleSelections">
             <summary>
             Enum MultipleSelections for value: multipleSelections
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Boolean">
             <summary>
             Enum Boolean for value: boolean
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Number">
             <summary>
             Enum Number for value: number
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Datetime">
             <summary>
             Enum Datetime for value: datetime
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Files">
             <summary>
             Enum Files for value: files
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Reference">
             <summary>
             Enum Reference for value: reference
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Lookup">
             <summary>
             Enum Lookup for value: lookup
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Language">
             <summary>
             Enum Language for value: language
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Json">
             <summary>
             Enum Json for value: json
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Yaml">
             <summary>
             Enum Yaml for value: yaml
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Html">
             <summary>
             Enum Html for value: html
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ViewColumn.TypeEnum.Formula">
             <summary>
             Enum Formula for value: formula
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ViewColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,Com.Gridly.Model.NumberFormat,Com.Gridly.Model.ColumnReference,System.Collections.Generic.List{System.String},System.Nullable{Com.Gridly.Model.ViewColumn.TypeEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.ViewColumn" /> class.
             </summary>
             <param name="dependsOn">dependsOn.</param>
             <param name="id">id.</param>
             <param name="isSource">isSource.</param>
             <param name="isTarget">isTarget.</param>
             <param name="languageCode">languageCode.</param>
             <param name="name">name.</param>
             <param name="numberFormat">numberFormat.</param>
             <param name="reference">reference.</param>
             <param name="selectionOptions">selectionOptions.</param>
             <param name="type">type.</param>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.DependsOn">
             <summary>
             Gets or Sets DependsOn
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.IsSource">
             <summary>
             Gets or Sets IsSource
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.IsTarget">
             <summary>
             Gets or Sets IsTarget
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.LanguageCode">
             <summary>
             Gets or Sets LanguageCode
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.NumberFormat">
             <summary>
             Gets or Sets NumberFormat
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.Reference">
             <summary>
             Gets or Sets Reference
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ViewColumn.SelectionOptions">
             <summary>
             Gets or Sets SelectionOptions
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ViewColumn.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ViewColumn.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ViewColumn.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ViewColumn.Equals(Com.Gridly.Model.ViewColumn)">
             <summary>
             Returns true if ViewColumn instances are equal
             </summary>
             <param name="input">Instance of ViewColumn to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ViewColumn.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.ViewColumn.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.UpdateMetadata">
             <summary>
             UpdateMetadata
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateMetadata.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UpdateMetadata" /> class.
             </summary>
             <param name="data">data.</param>
            </member>
        <member name="P:Com.Gridly.Model.UpdateMetadata.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateMetadata.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateMetadata.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateMetadata.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateMetadata.Equals(Com.Gridly.Model.UpdateMetadata)">
             <summary>
             Returns true if UpdateMetadata instances are equal
             </summary>
             <param name="input">Instance of UpdateMetadata to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateMetadata.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateMetadata.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.CreateMetadata">
             <summary>
             CreateMetadata
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateMetadata.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateMetadata" /> class.
             </summary>
             <param name="data">data.</param>
             <param name="id">id.</param>
            </member>
        <member name="P:Com.Gridly.Model.CreateMetadata.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateMetadata.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateMetadata.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateMetadata.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateMetadata.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateMetadata.Equals(Com.Gridly.Model.CreateMetadata)">
             <summary>
             Returns true if CreateMetadata instances are equal
             </summary>
             <param name="input">Instance of CreateMetadata to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateMetadata.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateMetadata.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Metadata">
             <summary>
             Metadata
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Metadata.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Metadata" /> class.
             </summary>
             <param name="data">data.</param>
             <param name="id">id.</param>
            </member>
        <member name="P:Com.Gridly.Model.Metadata.Data">
             <summary>
             Gets or Sets Data
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Metadata.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Metadata.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Metadata.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Metadata.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Metadata.Equals(Com.Gridly.Model.Metadata)">
             <summary>
             Returns true if Metadata instances are equal
             </summary>
             <param name="input">Instance of Metadata to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Metadata.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Metadata.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.ReferencedGrid">
             <summary>
             ReferencedGrid
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedGrid.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.ReferencedGrid" /> class.
             </summary>
             <param name="id">id.</param>
             <param name="name">name.</param>
            </member>
        <member name="P:Com.Gridly.Model.ReferencedGrid.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ReferencedGrid.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedGrid.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedGrid.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedGrid.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedGrid.Equals(Com.Gridly.Model.ReferencedGrid)">
             <summary>
             Returns true if ReferencedGrid instances are equal
             </summary>
             <param name="input">Instance of ReferencedGrid to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedGrid.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedGrid.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.CreateProject">
             <summary>
             CreateProject
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateProject" /> class.
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateProject" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:Com.Gridly.Model.CreateProject.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateProject.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.Equals(Com.Gridly.Model.CreateProject)">
             <summary>
             Returns true if CreateProject instances are equal
             </summary>
             <param name="input">Instance of CreateProject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateProject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.ColumnReference">
             <summary>
             ColumnReference
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.ColumnReference.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ColumnReference.TypeEnum.ROW">
             <summary>
             Enum ROW for value: ROW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ColumnReference.TypeEnum.CELL">
             <summary>
             Enum CELL for value: CELL
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ColumnReference.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ColumnReference.#ctor(Com.Gridly.Model.ReferencedColumn,Com.Gridly.Model.ReferencedGrid,System.Nullable{Com.Gridly.Model.ColumnReference.TypeEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.ColumnReference" /> class.
             </summary>
             <param name="column">column.</param>
             <param name="grid">grid.</param>
             <param name="type">type.</param>
            </member>
        <member name="P:Com.Gridly.Model.ColumnReference.Column">
             <summary>
             Gets or Sets Column
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ColumnReference.Grid">
             <summary>
             Gets or Sets Grid
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ColumnReference.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ColumnReference.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ColumnReference.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ColumnReference.Equals(Com.Gridly.Model.ColumnReference)">
             <summary>
             Returns true if ColumnReference instances are equal
             </summary>
             <param name="input">Instance of ColumnReference to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ColumnReference.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.ColumnReference.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.ReferencedColumn">
             <summary>
             ReferencedColumn
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.ReferencedColumn.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ReferencedColumn.TypeEnum.ROW">
             <summary>
             Enum ROW for value: ROW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.ReferencedColumn.TypeEnum.CELL">
             <summary>
             Enum CELL for value: CELL
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ReferencedColumn.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedColumn.#ctor(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{Com.Gridly.Model.ReferencedColumn.TypeEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.ReferencedColumn" /> class.
             </summary>
             <param name="id">id.</param>
             <param name="name">name.</param>
             <param name="selectionOptions">selectionOptions.</param>
             <param name="type">type.</param>
            </member>
        <member name="P:Com.Gridly.Model.ReferencedColumn.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ReferencedColumn.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.ReferencedColumn.SelectionOptions">
             <summary>
             Gets or Sets SelectionOptions
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedColumn.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedColumn.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedColumn.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedColumn.Equals(Com.Gridly.Model.ReferencedColumn)">
             <summary>
             Returns true if ReferencedColumn instances are equal
             </summary>
             <param name="input">Instance of ReferencedColumn to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedColumn.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.ReferencedColumn.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Project">
             <summary>
             Project
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Project.#ctor(System.Collections.Generic.List{Com.Gridly.Model.Database},System.String,System.Collections.Generic.List{System.Object},System.Int64,System.String,Com.Gridly.Model.Role)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Project" /> class.
             </summary>
             <param name="databases">databases.</param>
             <param name="description">description.</param>
             <param name="groups">groups.</param>
             <param name="id">id.</param>
             <param name="name">name.</param>
             <param name="role">role.</param>
            </member>
        <member name="P:Com.Gridly.Model.Project.Databases">
             <summary>
             Gets or Sets Databases
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Project.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Project.Groups">
             <summary>
             Gets or Sets Groups
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Project.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Project.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Project.Role">
             <summary>
             Gets or Sets Role
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Project.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Project.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Project.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Project.Equals(Com.Gridly.Model.Project)">
             <summary>
             Returns true if Project instances are equal
             </summary>
             <param name="input">Instance of Project to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Project.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Project.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.SetCell">
             <summary>
             SetCell
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.SetCell.#ctor(System.String,System.Collections.Generic.List{System.String},System.Object)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.SetCell" /> class.
             </summary>
             <param name="columnId">columnId.</param>
             <param name="referencedIds">referencedIds.</param>
             <param name="value">value.</param>
            </member>
        <member name="P:Com.Gridly.Model.SetCell.ColumnId">
             <summary>
             Gets or Sets ColumnId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.SetCell.ReferencedIds">
             <summary>
             Gets or Sets ReferencedIds
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.SetCell.Value">
             <summary>
             Gets or Sets Value
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.SetCell.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetCell.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetCell.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetCell.Equals(Com.Gridly.Model.SetCell)">
             <summary>
             Returns true if SetCell instances are equal
             </summary>
             <param name="input">Instance of SetCell to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetCell.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetCell.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.CreateColumn">
             <summary>
             CreateColumn
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.CreateColumn.LanguageCodeEnum">
             <summary>
             Defines LanguageCode
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnUS">
             <summary>
             Enum EnUS for value: enUS
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArSA">
             <summary>
             Enum ArSA for value: arSA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.CaES">
             <summary>
             Enum CaES for value: caES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ZhCN">
             <summary>
             Enum ZhCN for value: zhCN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ZhTW">
             <summary>
             Enum ZhTW for value: zhTW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.DeDE">
             <summary>
             Enum DeDE for value: deDE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ItIT">
             <summary>
             Enum ItIT for value: itIT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.JaJP">
             <summary>
             Enum JaJP for value: jaJP
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.KoKR">
             <summary>
             Enum KoKR for value: koKR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.PlPL">
             <summary>
             Enum PlPL for value: plPL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.PtBR">
             <summary>
             Enum PtBR for value: ptBR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.RuRU">
             <summary>
             Enum RuRU for value: ruRU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsMX">
             <summary>
             Enum EsMX for value: esMX
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsES">
             <summary>
             Enum EsES for value: esES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.BnBD">
             <summary>
             Enum BnBD for value: bnBD
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.BgBG">
             <summary>
             Enum BgBG for value: bgBG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ZhHK">
             <summary>
             Enum ZhHK for value: zhHK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.CsCZ">
             <summary>
             Enum CsCZ for value: csCZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.DaDK">
             <summary>
             Enum DaDK for value: daDK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.NlNL">
             <summary>
             Enum NlNL for value: nlNL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FiFI">
             <summary>
             Enum FiFI for value: fiFI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FrFR">
             <summary>
             Enum FrFR for value: frFR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FrCA">
             <summary>
             Enum FrCA for value: frCA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ElGR">
             <summary>
             Enum ElGR for value: elGR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.HeIL">
             <summary>
             Enum HeIL for value: heIL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.HiIN">
             <summary>
             Enum HiIN for value: hiIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.HuHU">
             <summary>
             Enum HuHU for value: huHU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.IdID">
             <summary>
             Enum IdID for value: idID
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.JwID">
             <summary>
             Enum JwID for value: jwID
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.LvLV">
             <summary>
             Enum LvLV for value: lvLV
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.MsMY">
             <summary>
             Enum MsMY for value: msMY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.NoNO">
             <summary>
             Enum NoNO for value: noNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.PtPT">
             <summary>
             Enum PtPT for value: ptPT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.RoRO">
             <summary>
             Enum RoRO for value: roRO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SkSK">
             <summary>
             Enum SkSK for value: skSK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SvSE">
             <summary>
             Enum SvSE for value: svSE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.TlPH">
             <summary>
             Enum TlPH for value: tlPH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ThTH">
             <summary>
             Enum ThTH for value: thTH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.TrTR">
             <summary>
             Enum TrTR for value: trTR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.UkUA">
             <summary>
             Enum UkUA for value: ukUA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.UrIN">
             <summary>
             Enum UrIN for value: urIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ViVN">
             <summary>
             Enum ViVN for value: viVN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.AfZA">
             <summary>
             Enum AfZA for value: afZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArAE">
             <summary>
             Enum ArAE for value: arAE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArBH">
             <summary>
             Enum ArBH for value: arBH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArDZ">
             <summary>
             Enum ArDZ for value: arDZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArEG">
             <summary>
             Enum ArEG for value: arEG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArIQ">
             <summary>
             Enum ArIQ for value: arIQ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArJO">
             <summary>
             Enum ArJO for value: arJO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArKW">
             <summary>
             Enum ArKW for value: arKW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArLB">
             <summary>
             Enum ArLB for value: arLB
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArLY">
             <summary>
             Enum ArLY for value: arLY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArMA">
             <summary>
             Enum ArMA for value: arMA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArOM">
             <summary>
             Enum ArOM for value: arOM
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArQA">
             <summary>
             Enum ArQA for value: arQA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArSY">
             <summary>
             Enum ArSY for value: arSY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArTN">
             <summary>
             Enum ArTN for value: arTN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ArYE">
             <summary>
             Enum ArYE for value: arYE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.AzAZ">
             <summary>
             Enum AzAZ for value: azAZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.BeBY">
             <summary>
             Enum BeBY for value: beBY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.BsBA">
             <summary>
             Enum BsBA for value: bsBA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.CyGB">
             <summary>
             Enum CyGB for value: cyGB
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.DeAT">
             <summary>
             Enum DeAT for value: deAT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.DeCH">
             <summary>
             Enum DeCH for value: deCH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.DeLI">
             <summary>
             Enum DeLI for value: deLI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.DeLU">
             <summary>
             Enum DeLU for value: deLU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.DvMV">
             <summary>
             Enum DvMV for value: dvMV
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnAU">
             <summary>
             Enum EnAU for value: enAU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnBZ">
             <summary>
             Enum EnBZ for value: enBZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnCA">
             <summary>
             Enum EnCA for value: enCA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnGB">
             <summary>
             Enum EnGB for value: enGB
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnIE">
             <summary>
             Enum EnIE for value: enIE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnJM">
             <summary>
             Enum EnJM for value: enJM
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnNZ">
             <summary>
             Enum EnNZ for value: enNZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnPH">
             <summary>
             Enum EnPH for value: enPH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnTT">
             <summary>
             Enum EnTT for value: enTT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnZA">
             <summary>
             Enum EnZA for value: enZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EnZW">
             <summary>
             Enum EnZW for value: enZW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsAR">
             <summary>
             Enum EsAR for value: esAR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsBO">
             <summary>
             Enum EsBO for value: esBO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsCL">
             <summary>
             Enum EsCL for value: esCL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsCO">
             <summary>
             Enum EsCO for value: esCO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsCR">
             <summary>
             Enum EsCR for value: esCR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsDO">
             <summary>
             Enum EsDO for value: esDO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsEC">
             <summary>
             Enum EsEC for value: esEC
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsGT">
             <summary>
             Enum EsGT for value: esGT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsHN">
             <summary>
             Enum EsHN for value: esHN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsNI">
             <summary>
             Enum EsNI for value: esNI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsPA">
             <summary>
             Enum EsPA for value: esPA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsPE">
             <summary>
             Enum EsPE for value: esPE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsPR">
             <summary>
             Enum EsPR for value: esPR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsPY">
             <summary>
             Enum EsPY for value: esPY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsSV">
             <summary>
             Enum EsSV for value: esSV
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsUY">
             <summary>
             Enum EsUY for value: esUY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EsVE">
             <summary>
             Enum EsVE for value: esVE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EtEE">
             <summary>
             Enum EtEE for value: etEE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.EuES">
             <summary>
             Enum EuES for value: euES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FaIR">
             <summary>
             Enum FaIR for value: faIR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FoFO">
             <summary>
             Enum FoFO for value: foFO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FrBE">
             <summary>
             Enum FrBE for value: frBE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FrCH">
             <summary>
             Enum FrCH for value: frCH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FrLU">
             <summary>
             Enum FrLU for value: frLU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.FrMC">
             <summary>
             Enum FrMC for value: frMC
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.GlES">
             <summary>
             Enum GlES for value: glES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.GuIN">
             <summary>
             Enum GuIN for value: guIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.HrBA">
             <summary>
             Enum HrBA for value: hrBA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.HrHR">
             <summary>
             Enum HrHR for value: hrHR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.HyAM">
             <summary>
             Enum HyAM for value: hyAM
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.IsIS">
             <summary>
             Enum IsIS for value: isIS
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ItCH">
             <summary>
             Enum ItCH for value: itCH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.KaGE">
             <summary>
             Enum KaGE for value: kaGE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.KkKZ">
             <summary>
             Enum KkKZ for value: kkKZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.KnIN">
             <summary>
             Enum KnIN for value: knIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.KokIN">
             <summary>
             Enum KokIN for value: kokIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.KyKG">
             <summary>
             Enum KyKG for value: kyKG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.LtLT">
             <summary>
             Enum LtLT for value: ltLT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.MiNZ">
             <summary>
             Enum MiNZ for value: miNZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.MkMK">
             <summary>
             Enum MkMK for value: mkMK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.MnMN">
             <summary>
             Enum MnMN for value: mnMN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.MrIN">
             <summary>
             Enum MrIN for value: mrIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.MsBN">
             <summary>
             Enum MsBN for value: msBN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.MtMT">
             <summary>
             Enum MtMT for value: mtMT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.NbNO">
             <summary>
             Enum NbNO for value: nbNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.NlBE">
             <summary>
             Enum NlBE for value: nlBE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.NnNO">
             <summary>
             Enum NnNO for value: nnNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.NsZA">
             <summary>
             Enum NsZA for value: nsZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.PaIN">
             <summary>
             Enum PaIN for value: paIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.PsAR">
             <summary>
             Enum PsAR for value: psAR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.QuBO">
             <summary>
             Enum QuBO for value: quBO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.QuEC">
             <summary>
             Enum QuEC for value: quEC
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.QuPE">
             <summary>
             Enum QuPE for value: quPE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SaIN">
             <summary>
             Enum SaIN for value: saIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SeFI">
             <summary>
             Enum SeFI for value: seFI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SeNO">
             <summary>
             Enum SeNO for value: seNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SeSE">
             <summary>
             Enum SeSE for value: seSE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SlSI">
             <summary>
             Enum SlSI for value: slSI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SqAL">
             <summary>
             Enum SqAL for value: sqAL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SrBA">
             <summary>
             Enum SrBA for value: srBA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SvFI">
             <summary>
             Enum SvFI for value: svFI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SwKE">
             <summary>
             Enum SwKE for value: swKE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.SyrSY">
             <summary>
             Enum SyrSY for value: syrSY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.TaIN">
             <summary>
             Enum TaIN for value: taIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.TeIN">
             <summary>
             Enum TeIN for value: teIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.TnZA">
             <summary>
             Enum TnZA for value: tnZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.TtRU">
             <summary>
             Enum TtRU for value: ttRU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.UrPK">
             <summary>
             Enum UrPK for value: urPK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.UzUZ">
             <summary>
             Enum UzUZ for value: uzUZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.XhZA">
             <summary>
             Enum XhZA for value: xhZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ZhMO">
             <summary>
             Enum ZhMO for value: zhMO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ZhSG">
             <summary>
             Enum ZhSG for value: zhSG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.LanguageCodeEnum.ZuZA">
             <summary>
             Enum ZuZA for value: zuZA
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateColumn.LanguageCode">
             <summary>
             Gets or Sets LanguageCode
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.CreateColumn.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.SingleLine">
             <summary>
             Enum SingleLine for value: singleLine
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.MultipleLines">
             <summary>
             Enum MultipleLines for value: multipleLines
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.RichText">
             <summary>
             Enum RichText for value: richText
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Markdown">
             <summary>
             Enum Markdown for value: markdown
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.SingleSelection">
             <summary>
             Enum SingleSelection for value: singleSelection
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.MultipleSelections">
             <summary>
             Enum MultipleSelections for value: multipleSelections
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Boolean">
             <summary>
             Enum Boolean for value: boolean
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Number">
             <summary>
             Enum Number for value: number
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Datetime">
             <summary>
             Enum Datetime for value: datetime
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Files">
             <summary>
             Enum Files for value: files
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Reference">
             <summary>
             Enum Reference for value: reference
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Lookup">
             <summary>
             Enum Lookup for value: lookup
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Language">
             <summary>
             Enum Language for value: language
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Json">
             <summary>
             Enum Json for value: json
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Yaml">
             <summary>
             Enum Yaml for value: yaml
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Html">
             <summary>
             Enum Html for value: html
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.CreateColumn.TypeEnum.Formula">
             <summary>
             Enum Formula for value: formula
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateColumn.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateColumn" /> class.
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.#ctor(System.String,System.Nullable{Com.Gridly.Model.CreateColumn.LanguageCodeEnum},System.String,Com.Gridly.Model.NumberFormat,Com.Gridly.Model.Reference,System.Collections.Generic.List{System.String},Com.Gridly.Model.CreateColumn.TypeEnum)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.CreateColumn" /> class.
             </summary>
             <param name="id">id.</param>
             <param name="languageCode">languageCode.</param>
             <param name="name">name.</param>
             <param name="numberFormat">numberFormat.</param>
             <param name="reference">reference.</param>
             <param name="selectionOptions">selectionOptions.</param>
             <param name="type">type (required).</param>
            </member>
        <member name="P:Com.Gridly.Model.CreateColumn.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateColumn.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateColumn.NumberFormat">
             <summary>
             Gets or Sets NumberFormat
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateColumn.Reference">
             <summary>
             Gets or Sets Reference
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.CreateColumn.SelectionOptions">
             <summary>
             Gets or Sets SelectionOptions
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.Equals(Com.Gridly.Model.CreateColumn)">
             <summary>
             Returns true if CreateColumn instances are equal
             </summary>
             <param name="input">Instance of CreateColumn to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.CreateColumn.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.UpdateColumn">
             <summary>
             UpdateColumn
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum">
             <summary>
             Defines LanguageCode
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnUS">
             <summary>
             Enum EnUS for value: enUS
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArSA">
             <summary>
             Enum ArSA for value: arSA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.CaES">
             <summary>
             Enum CaES for value: caES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ZhCN">
             <summary>
             Enum ZhCN for value: zhCN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ZhTW">
             <summary>
             Enum ZhTW for value: zhTW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.DeDE">
             <summary>
             Enum DeDE for value: deDE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ItIT">
             <summary>
             Enum ItIT for value: itIT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.JaJP">
             <summary>
             Enum JaJP for value: jaJP
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.KoKR">
             <summary>
             Enum KoKR for value: koKR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.PlPL">
             <summary>
             Enum PlPL for value: plPL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.PtBR">
             <summary>
             Enum PtBR for value: ptBR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.RuRU">
             <summary>
             Enum RuRU for value: ruRU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsMX">
             <summary>
             Enum EsMX for value: esMX
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsES">
             <summary>
             Enum EsES for value: esES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.BnBD">
             <summary>
             Enum BnBD for value: bnBD
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.BgBG">
             <summary>
             Enum BgBG for value: bgBG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ZhHK">
             <summary>
             Enum ZhHK for value: zhHK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.CsCZ">
             <summary>
             Enum CsCZ for value: csCZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.DaDK">
             <summary>
             Enum DaDK for value: daDK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.NlNL">
             <summary>
             Enum NlNL for value: nlNL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FiFI">
             <summary>
             Enum FiFI for value: fiFI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FrFR">
             <summary>
             Enum FrFR for value: frFR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FrCA">
             <summary>
             Enum FrCA for value: frCA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ElGR">
             <summary>
             Enum ElGR for value: elGR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.HeIL">
             <summary>
             Enum HeIL for value: heIL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.HiIN">
             <summary>
             Enum HiIN for value: hiIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.HuHU">
             <summary>
             Enum HuHU for value: huHU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.IdID">
             <summary>
             Enum IdID for value: idID
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.JwID">
             <summary>
             Enum JwID for value: jwID
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.LvLV">
             <summary>
             Enum LvLV for value: lvLV
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.MsMY">
             <summary>
             Enum MsMY for value: msMY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.NoNO">
             <summary>
             Enum NoNO for value: noNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.PtPT">
             <summary>
             Enum PtPT for value: ptPT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.RoRO">
             <summary>
             Enum RoRO for value: roRO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SkSK">
             <summary>
             Enum SkSK for value: skSK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SvSE">
             <summary>
             Enum SvSE for value: svSE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.TlPH">
             <summary>
             Enum TlPH for value: tlPH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ThTH">
             <summary>
             Enum ThTH for value: thTH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.TrTR">
             <summary>
             Enum TrTR for value: trTR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.UkUA">
             <summary>
             Enum UkUA for value: ukUA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.UrIN">
             <summary>
             Enum UrIN for value: urIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ViVN">
             <summary>
             Enum ViVN for value: viVN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.AfZA">
             <summary>
             Enum AfZA for value: afZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArAE">
             <summary>
             Enum ArAE for value: arAE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArBH">
             <summary>
             Enum ArBH for value: arBH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArDZ">
             <summary>
             Enum ArDZ for value: arDZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArEG">
             <summary>
             Enum ArEG for value: arEG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArIQ">
             <summary>
             Enum ArIQ for value: arIQ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArJO">
             <summary>
             Enum ArJO for value: arJO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArKW">
             <summary>
             Enum ArKW for value: arKW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArLB">
             <summary>
             Enum ArLB for value: arLB
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArLY">
             <summary>
             Enum ArLY for value: arLY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArMA">
             <summary>
             Enum ArMA for value: arMA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArOM">
             <summary>
             Enum ArOM for value: arOM
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArQA">
             <summary>
             Enum ArQA for value: arQA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArSY">
             <summary>
             Enum ArSY for value: arSY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArTN">
             <summary>
             Enum ArTN for value: arTN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ArYE">
             <summary>
             Enum ArYE for value: arYE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.AzAZ">
             <summary>
             Enum AzAZ for value: azAZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.BeBY">
             <summary>
             Enum BeBY for value: beBY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.BsBA">
             <summary>
             Enum BsBA for value: bsBA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.CyGB">
             <summary>
             Enum CyGB for value: cyGB
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.DeAT">
             <summary>
             Enum DeAT for value: deAT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.DeCH">
             <summary>
             Enum DeCH for value: deCH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.DeLI">
             <summary>
             Enum DeLI for value: deLI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.DeLU">
             <summary>
             Enum DeLU for value: deLU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.DvMV">
             <summary>
             Enum DvMV for value: dvMV
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnAU">
             <summary>
             Enum EnAU for value: enAU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnBZ">
             <summary>
             Enum EnBZ for value: enBZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnCA">
             <summary>
             Enum EnCA for value: enCA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnGB">
             <summary>
             Enum EnGB for value: enGB
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnIE">
             <summary>
             Enum EnIE for value: enIE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnJM">
             <summary>
             Enum EnJM for value: enJM
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnNZ">
             <summary>
             Enum EnNZ for value: enNZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnPH">
             <summary>
             Enum EnPH for value: enPH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnTT">
             <summary>
             Enum EnTT for value: enTT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnZA">
             <summary>
             Enum EnZA for value: enZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EnZW">
             <summary>
             Enum EnZW for value: enZW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsAR">
             <summary>
             Enum EsAR for value: esAR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsBO">
             <summary>
             Enum EsBO for value: esBO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsCL">
             <summary>
             Enum EsCL for value: esCL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsCO">
             <summary>
             Enum EsCO for value: esCO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsCR">
             <summary>
             Enum EsCR for value: esCR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsDO">
             <summary>
             Enum EsDO for value: esDO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsEC">
             <summary>
             Enum EsEC for value: esEC
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsGT">
             <summary>
             Enum EsGT for value: esGT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsHN">
             <summary>
             Enum EsHN for value: esHN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsNI">
             <summary>
             Enum EsNI for value: esNI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsPA">
             <summary>
             Enum EsPA for value: esPA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsPE">
             <summary>
             Enum EsPE for value: esPE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsPR">
             <summary>
             Enum EsPR for value: esPR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsPY">
             <summary>
             Enum EsPY for value: esPY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsSV">
             <summary>
             Enum EsSV for value: esSV
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsUY">
             <summary>
             Enum EsUY for value: esUY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EsVE">
             <summary>
             Enum EsVE for value: esVE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EtEE">
             <summary>
             Enum EtEE for value: etEE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.EuES">
             <summary>
             Enum EuES for value: euES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FaIR">
             <summary>
             Enum FaIR for value: faIR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FoFO">
             <summary>
             Enum FoFO for value: foFO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FrBE">
             <summary>
             Enum FrBE for value: frBE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FrCH">
             <summary>
             Enum FrCH for value: frCH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FrLU">
             <summary>
             Enum FrLU for value: frLU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.FrMC">
             <summary>
             Enum FrMC for value: frMC
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.GlES">
             <summary>
             Enum GlES for value: glES
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.GuIN">
             <summary>
             Enum GuIN for value: guIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.HrBA">
             <summary>
             Enum HrBA for value: hrBA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.HrHR">
             <summary>
             Enum HrHR for value: hrHR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.HyAM">
             <summary>
             Enum HyAM for value: hyAM
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.IsIS">
             <summary>
             Enum IsIS for value: isIS
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ItCH">
             <summary>
             Enum ItCH for value: itCH
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.KaGE">
             <summary>
             Enum KaGE for value: kaGE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.KkKZ">
             <summary>
             Enum KkKZ for value: kkKZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.KnIN">
             <summary>
             Enum KnIN for value: knIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.KokIN">
             <summary>
             Enum KokIN for value: kokIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.KyKG">
             <summary>
             Enum KyKG for value: kyKG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.LtLT">
             <summary>
             Enum LtLT for value: ltLT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.MiNZ">
             <summary>
             Enum MiNZ for value: miNZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.MkMK">
             <summary>
             Enum MkMK for value: mkMK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.MnMN">
             <summary>
             Enum MnMN for value: mnMN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.MrIN">
             <summary>
             Enum MrIN for value: mrIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.MsBN">
             <summary>
             Enum MsBN for value: msBN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.MtMT">
             <summary>
             Enum MtMT for value: mtMT
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.NbNO">
             <summary>
             Enum NbNO for value: nbNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.NlBE">
             <summary>
             Enum NlBE for value: nlBE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.NnNO">
             <summary>
             Enum NnNO for value: nnNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.NsZA">
             <summary>
             Enum NsZA for value: nsZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.PaIN">
             <summary>
             Enum PaIN for value: paIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.PsAR">
             <summary>
             Enum PsAR for value: psAR
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.QuBO">
             <summary>
             Enum QuBO for value: quBO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.QuEC">
             <summary>
             Enum QuEC for value: quEC
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.QuPE">
             <summary>
             Enum QuPE for value: quPE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SaIN">
             <summary>
             Enum SaIN for value: saIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SeFI">
             <summary>
             Enum SeFI for value: seFI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SeNO">
             <summary>
             Enum SeNO for value: seNO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SeSE">
             <summary>
             Enum SeSE for value: seSE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SlSI">
             <summary>
             Enum SlSI for value: slSI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SqAL">
             <summary>
             Enum SqAL for value: sqAL
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SrBA">
             <summary>
             Enum SrBA for value: srBA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SvFI">
             <summary>
             Enum SvFI for value: svFI
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SwKE">
             <summary>
             Enum SwKE for value: swKE
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.SyrSY">
             <summary>
             Enum SyrSY for value: syrSY
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.TaIN">
             <summary>
             Enum TaIN for value: taIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.TeIN">
             <summary>
             Enum TeIN for value: teIN
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.TnZA">
             <summary>
             Enum TnZA for value: tnZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.TtRU">
             <summary>
             Enum TtRU for value: ttRU
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.UrPK">
             <summary>
             Enum UrPK for value: urPK
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.UzUZ">
             <summary>
             Enum UzUZ for value: uzUZ
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.XhZA">
             <summary>
             Enum XhZA for value: xhZA
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ZhMO">
             <summary>
             Enum ZhMO for value: zhMO
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ZhSG">
             <summary>
             Enum ZhSG for value: zhSG
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.UpdateColumn.LanguageCodeEnum.ZuZA">
             <summary>
             Enum ZuZA for value: zuZA
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UpdateColumn.LanguageCode">
             <summary>
             Gets or Sets LanguageCode
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateColumn.#ctor(System.Nullable{Com.Gridly.Model.UpdateColumn.LanguageCodeEnum},System.String,Com.Gridly.Model.NumberFormat,System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UpdateColumn" /> class.
             </summary>
             <param name="languageCode">languageCode.</param>
             <param name="name">name.</param>
             <param name="numberFormat">numberFormat.</param>
             <param name="selectionOptions">selectionOptions.</param>
            </member>
        <member name="P:Com.Gridly.Model.UpdateColumn.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UpdateColumn.NumberFormat">
             <summary>
             Gets or Sets NumberFormat
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UpdateColumn.SelectionOptions">
             <summary>
             Gets or Sets SelectionOptions
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateColumn.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateColumn.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateColumn.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateColumn.Equals(Com.Gridly.Model.UpdateColumn)">
             <summary>
             Returns true if UpdateColumn instances are equal
             </summary>
             <param name="input">Instance of UpdateColumn to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateColumn.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateColumn.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.DeleteRecord">
             <summary>
             DeleteRecord
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.DeleteRecord.#ctor(System.Collections.Generic.List{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.DeleteRecord" /> class.
             </summary>
             <param name="ids">ids.</param>
            </member>
        <member name="P:Com.Gridly.Model.DeleteRecord.Ids">
             <summary>
             Gets or Sets Ids
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.DeleteRecord.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.DeleteRecord.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.DeleteRecord.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.DeleteRecord.Equals(Com.Gridly.Model.DeleteRecord)">
             <summary>
             Returns true if DeleteRecord instances are equal
             </summary>
             <param name="input">Instance of DeleteRecord to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.DeleteRecord.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.DeleteRecord.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.View">
             <summary>
             View
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.View.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.View" /> class.
             </summary>
             <param name="customProperties">customProperties.</param>
             <param name="description">description.</param>
             <param name="gridId">gridId.</param>
             <param name="groupTagDefinition">groupTagDefinition.</param>
             <param name="id">id.</param>
             <param name="name">name.</param>
             <param name="status">status.</param>
            </member>
        <member name="P:Com.Gridly.Model.View.CustomProperties">
             <summary>
             Gets or Sets CustomProperties
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.View.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.View.GridId">
             <summary>
             Gets or Sets GridId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.View.GroupTagDefinition">
             <summary>
             Gets or Sets GroupTagDefinition
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.View.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.View.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.View.Status">
             <summary>
             Gets or Sets Status
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.View.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.View.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.View.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.View.Equals(Com.Gridly.Model.View)">
             <summary>
             Returns true if View instances are equal
             </summary>
             <param name="input">Instance of View to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.View.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.View.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.SetRecord">
             <summary>
             SetRecord
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.SetRecord.#ctor(System.Collections.Generic.List{Com.Gridly.Model.SetCell},System.String,Com.Gridly.Model.OptionalOfstring)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.SetRecord" /> class.
             </summary>
             <param name="cells">cells.</param>
             <param name="id">id.</param>
             <param name="path">path.</param>
            </member>
        <member name="P:Com.Gridly.Model.SetRecord.Cells">
             <summary>
             Gets or Sets Cells
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.SetRecord.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.SetRecord.Path">
             <summary>
             Gets or Sets Path
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.SetRecord.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetRecord.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetRecord.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetRecord.Equals(Com.Gridly.Model.SetRecord)">
             <summary>
             Returns true if SetRecord instances are equal
             </summary>
             <param name="input">Instance of SetRecord to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetRecord.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.SetRecord.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.UploadedFile">
             <summary>
             UploadedFile
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UploadedFile.#ctor(System.String,System.String,System.String,System.Int64)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UploadedFile" /> class.
             </summary>
             <param name="contentType">contentType.</param>
             <param name="id">id.</param>
             <param name="originalName">originalName.</param>
             <param name="size">size.</param>
            </member>
        <member name="P:Com.Gridly.Model.UploadedFile.ContentType">
             <summary>
             Gets or Sets ContentType
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UploadedFile.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UploadedFile.OriginalName">
             <summary>
             Gets or Sets OriginalName
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UploadedFile.Size">
             <summary>
             Gets or Sets Size
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UploadedFile.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UploadedFile.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UploadedFile.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UploadedFile.Equals(Com.Gridly.Model.UploadedFile)">
             <summary>
             Returns true if UploadedFile instances are equal
             </summary>
             <param name="input">Instance of UploadedFile to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UploadedFile.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.UploadedFile.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Record">
             <summary>
             Record
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Record.#ctor(System.Collections.Generic.List{Com.Gridly.Model.Cell},System.String,System.String,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Record" /> class.
             </summary>
             <param name="cells">cells.</param>
             <param name="id">id.</param>
             <param name="lastModifiedBy">lastModifiedBy.</param>
             <param name="lastModifiedTime">lastModifiedTime.</param>
             <param name="path">path.</param>
            </member>
        <member name="P:Com.Gridly.Model.Record.Cells">
             <summary>
             Gets or Sets Cells
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Record.Id">
             <summary>
             Gets or Sets Id
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Record.LastModifiedBy">
             <summary>
             Gets or Sets LastModifiedBy
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Record.LastModifiedTime">
             <summary>
             Gets or Sets LastModifiedTime
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Record.Path">
             <summary>
             Gets or Sets Path
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Record.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Record.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Record.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Record.Equals(Com.Gridly.Model.Record)">
             <summary>
             Returns true if Record instances are equal
             </summary>
             <param name="input">Instance of Record to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Record.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Record.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.OptionalOfstring">
             <summary>
             OptionalOfstring
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.OptionalOfstring.#ctor(System.Boolean,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.OptionalOfstring" /> class.
             </summary>
             <param name="empty">empty.</param>
             <param name="present">present.</param>
            </member>
        <member name="P:Com.Gridly.Model.OptionalOfstring.Empty">
             <summary>
             Gets or Sets Empty
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.OptionalOfstring.Present">
             <summary>
             Gets or Sets Present
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.OptionalOfstring.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.OptionalOfstring.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.OptionalOfstring.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.OptionalOfstring.Equals(Com.Gridly.Model.OptionalOfstring)">
             <summary>
             Returns true if OptionalOfstring instances are equal
             </summary>
             <param name="input">Instance of OptionalOfstring to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.OptionalOfstring.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.OptionalOfstring.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.Reference">
             <summary>
             Reference
             </summary>
            </member>
        <member name="T:Com.Gridly.Model.Reference.TypeEnum">
             <summary>
             Defines Type
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Reference.TypeEnum.ROW">
             <summary>
             Enum ROW for value: ROW
             </summary>
            </member>
        <member name="F:Com.Gridly.Model.Reference.TypeEnum.CELL">
             <summary>
             Enum CELL for value: CELL
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Reference.Type">
             <summary>
             Gets or Sets Type
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Reference.#ctor(System.String,System.String,System.Nullable{Com.Gridly.Model.Reference.TypeEnum})">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.Reference" /> class.
             </summary>
             <param name="columnId">columnId.</param>
             <param name="gridId">gridId.</param>
             <param name="type">type.</param>
            </member>
        <member name="P:Com.Gridly.Model.Reference.ColumnId">
             <summary>
             Gets or Sets ColumnId
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.Reference.GridId">
             <summary>
             Gets or Sets GridId
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.Reference.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Reference.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.Reference.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Reference.Equals(Com.Gridly.Model.Reference)">
             <summary>
             Returns true if Reference instances are equal
             </summary>
             <param name="input">Instance of Reference to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.Reference.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.Reference.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Model.UpdateProject">
             <summary>
             UpdateProject
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UpdateProject" /> class.
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Model.UpdateProject" /> class.
             </summary>
             <param name="description">description.</param>
             <param name="name">name (required).</param>
            </member>
        <member name="P:Com.Gridly.Model.UpdateProject.Description">
             <summary>
             Gets or Sets Description
             </summary>
            </member>
        <member name="P:Com.Gridly.Model.UpdateProject.Name">
             <summary>
             Gets or Sets Name
             </summary>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.ToString">
             <summary>
             Returns the string presentation of the object
             </summary>
             <returns>String presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.ToJson">
             <summary>
             Returns the JSON string presentation of the object
             </summary>
             <returns>JSON string presentation of the object</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.Equals(System.Object)">
             <summary>
             Returns true if objects are equal
             </summary>
             <param name="input">Object to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.Equals(Com.Gridly.Model.UpdateProject)">
             <summary>
             Returns true if UpdateProject instances are equal
             </summary>
             <param name="input">Instance of UpdateProject to be compared</param>
             <returns>Boolean</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.GetHashCode">
             <summary>
             Gets the hash code
             </summary>
             <returns>Hash code</returns>
            </member>
        <member name="M:Com.Gridly.Model.UpdateProject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
             <summary>
             To validate all properties of the instance
             </summary>
             <param name="validationContext">Validation context</param>
             <returns>Validation Result</returns>
            </member>
        <member name="T:Com.Gridly.Api.IDatabaseApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.Create(System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.CreateWithHttpInfo(System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.Delete(System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.DeleteWithHttpInfo(System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.Duplicate(System.String,System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             duplicate
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.DuplicateWithHttpInfo(System.String,System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             duplicate
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.Get(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.GetWithHttpInfo(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.List(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <returns>List&lt;Database&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.ListWithHttpInfo(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <returns>ApiResponse of List&lt;Database&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.Update(System.String,Com.Gridly.Model.UpdateDatabase)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.UpdateWithHttpInfo(System.String,Com.Gridly.Model.UpdateDatabase)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.CreateAsync(System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.CreateWithHttpInfoAsync(System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.DeleteAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.DeleteWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.DuplicateAsync(System.String,System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             duplicate
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.DuplicateWithHttpInfoAsync(System.String,System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             duplicate
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.ListAsync(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Database&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.ListWithHttpInfoAsync(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Database&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.UpdateAsync(System.String,Com.Gridly.Model.UpdateDatabase,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.IDatabaseApi.UpdateWithHttpInfoAsync(System.String,Com.Gridly.Model.UpdateDatabase,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="T:Com.Gridly.Api.DatabaseApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.DatabaseApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.DatabaseApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.DatabaseApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.DatabaseApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.DatabaseApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.Create(System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.CreateWithHttpInfo(System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.CreateAsync(System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.CreateWithHttpInfoAsync(System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.Delete(System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.DeleteWithHttpInfo(System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.DeleteAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.DeleteWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.Duplicate(System.String,System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             duplicate 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.DuplicateWithHttpInfo(System.String,System.Int64,Com.Gridly.Model.CreateDatabase)">
             <summary>
             duplicate 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.DuplicateAsync(System.String,System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             duplicate 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.DuplicateWithHttpInfoAsync(System.String,System.Int64,Com.Gridly.Model.CreateDatabase,System.Threading.CancellationToken)">
             <summary>
             duplicate 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="projectId">projectId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.Get(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.GetWithHttpInfo(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.List(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <returns>List&lt;Database&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.ListWithHttpInfo(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <returns>ApiResponse of List&lt;Database&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.ListAsync(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Database&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.ListWithHttpInfoAsync(System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand (optional)</param>
             <param name="page">page (optional)</param>
             <param name="projectId">projectId (optional)</param>
             <param name="search">search (optional)</param>
             <param name="sort">sort (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Database&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.Update(System.String,Com.Gridly.Model.UpdateDatabase)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <returns>Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.UpdateWithHttpInfo(System.String,Com.Gridly.Model.UpdateDatabase)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <returns>ApiResponse of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.UpdateAsync(System.String,Com.Gridly.Model.UpdateDatabase,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Database</returns>
            </member>
        <member name="M:Com.Gridly.Api.DatabaseApi.UpdateWithHttpInfoAsync(System.String,Com.Gridly.Model.UpdateDatabase,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="body">body</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Database)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IGridApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.Create(System.String,Com.Gridly.Model.CreateGrid)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <returns>Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateGrid)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <returns>ApiResponse of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.Delete(System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.DeleteWithHttpInfo(System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.Get(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.GetWithHttpInfo(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.List(System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.ListWithHttpInfo(System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>ApiResponse of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.ListTemplateGrids">
             <summary>
             listTemplateGrids
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.ListTemplateGridsWithHttpInfo">
             <summary>
             listTemplateGrids
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>ApiResponse of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.Update(System.String,Com.Gridly.Model.UpdateGrid)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <returns>Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.UpdateWithHttpInfo(System.String,Com.Gridly.Model.UpdateGrid)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <returns>ApiResponse of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.CreateAsync(System.String,Com.Gridly.Model.CreateGrid,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateGrid,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Grid)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.DeleteAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.DeleteWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Grid)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.ListAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.ListWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Grid&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.ListTemplateGridsAsync(System.Threading.CancellationToken)">
             <summary>
             listTemplateGrids
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.ListTemplateGridsWithHttpInfoAsync(System.Threading.CancellationToken)">
             <summary>
             listTemplateGrids
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Grid&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.UpdateAsync(System.String,Com.Gridly.Model.UpdateGrid,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridApi.UpdateWithHttpInfoAsync(System.String,Com.Gridly.Model.UpdateGrid,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Grid)</returns>
            </member>
        <member name="T:Com.Gridly.Api.GridApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.GridApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.GridApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.GridApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.GridApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.GridApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.Create(System.String,Com.Gridly.Model.CreateGrid)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <returns>Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateGrid)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <returns>ApiResponse of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.CreateAsync(System.String,Com.Gridly.Model.CreateGrid,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateGrid,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="createCompositeGrid">createCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Grid)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.Delete(System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.DeleteWithHttpInfo(System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.DeleteAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.DeleteWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.Get(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.GetWithHttpInfo(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Grid)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.List(System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.ListWithHttpInfo(System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <returns>ApiResponse of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.ListAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.ListWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="dbId">dbId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Grid&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.ListTemplateGrids">
             <summary>
             listTemplateGrids 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.ListTemplateGridsWithHttpInfo">
             <summary>
             listTemplateGrids 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>ApiResponse of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.ListTemplateGridsAsync(System.Threading.CancellationToken)">
             <summary>
             listTemplateGrids 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Grid&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.ListTemplateGridsWithHttpInfoAsync(System.Threading.CancellationToken)">
             <summary>
             listTemplateGrids 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Grid&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.Update(System.String,Com.Gridly.Model.UpdateGrid)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <returns>Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.UpdateWithHttpInfo(System.String,Com.Gridly.Model.UpdateGrid)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <returns>ApiResponse of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.UpdateAsync(System.String,Com.Gridly.Model.UpdateGrid,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Grid</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridApi.UpdateWithHttpInfoAsync(System.String,Com.Gridly.Model.UpdateGrid,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="updateCompositeGrid">updateCompositeGrid</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Grid)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IGridMetadataApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.Create(System.String,Com.Gridly.Model.CreateMetadata)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <returns>Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateMetadata)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <returns>ApiResponse of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.Delete(System.String,System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.DeleteWithHttpInfo(System.String,System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.Get(System.String,System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns>Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns>ApiResponse of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.List(System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>List&lt;Metadata&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.ListWithHttpInfo(System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of List&lt;Metadata&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.Update(System.String,System.String,Com.Gridly.Model.UpdateMetadata)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <returns>Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.UpdateWithHttpInfo(System.String,System.String,Com.Gridly.Model.UpdateMetadata)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <returns>ApiResponse of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.CreateAsync(System.String,Com.Gridly.Model.CreateMetadata,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateMetadata,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Metadata)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.DeleteWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.GetWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Metadata)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.ListAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Metadata&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.ListWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Metadata&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.UpdateAsync(System.String,System.String,Com.Gridly.Model.UpdateMetadata,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.IGridMetadataApi.UpdateWithHttpInfoAsync(System.String,System.String,Com.Gridly.Model.UpdateMetadata,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Metadata)</returns>
            </member>
        <member name="T:Com.Gridly.Api.GridMetadataApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.GridMetadataApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.GridMetadataApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.GridMetadataApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.GridMetadataApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.GridMetadataApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.Create(System.String,Com.Gridly.Model.CreateMetadata)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <returns>Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateMetadata)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <returns>ApiResponse of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.CreateAsync(System.String,Com.Gridly.Model.CreateMetadata,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateMetadata,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createMetadataDTO">createMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Metadata)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.Delete(System.String,System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.DeleteWithHttpInfo(System.String,System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.DeleteWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.Get(System.String,System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns>Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <returns>ApiResponse of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.GetWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Metadata)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.List(System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>List&lt;Metadata&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.ListWithHttpInfo(System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of List&lt;Metadata&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.ListAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Metadata&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.ListWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Metadata&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.Update(System.String,System.String,Com.Gridly.Model.UpdateMetadata)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <returns>Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.UpdateWithHttpInfo(System.String,System.String,Com.Gridly.Model.UpdateMetadata)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <returns>ApiResponse of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.UpdateAsync(System.String,System.String,Com.Gridly.Model.UpdateMetadata,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Metadata</returns>
            </member>
        <member name="M:Com.Gridly.Api.GridMetadataApi.UpdateWithHttpInfoAsync(System.String,System.String,Com.Gridly.Model.UpdateMetadata,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="metadataId">metadataId</param>
             <param name="updateMetadataDTO">updateMetadataDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Metadata)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IProjectApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.Create(Com.Gridly.Model.CreateProject)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <returns>Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.CreateWithHttpInfo(Com.Gridly.Model.CreateProject)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <returns>ApiResponse of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.Delete(System.Int64)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.DeleteWithHttpInfo(System.Int64)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.FindOneDetail(System.String,System.Int64)">
             <summary>
             findOneDetail
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <returns>Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.FindOneDetailWithHttpInfo(System.String,System.Int64)">
             <summary>
             findOneDetail
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <returns>ApiResponse of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.List">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>List&lt;Project&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.ListWithHttpInfo">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>ApiResponse of List&lt;Project&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.Update(System.Int64,Com.Gridly.Model.UpdateProject)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <returns>Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.UpdateWithHttpInfo(System.Int64,Com.Gridly.Model.UpdateProject)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <returns>ApiResponse of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.CreateAsync(Com.Gridly.Model.CreateProject,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.CreateWithHttpInfoAsync(Com.Gridly.Model.CreateProject,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Project)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.DeleteAsync(System.Int64,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.DeleteWithHttpInfoAsync(System.Int64,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.FindOneDetailAsync(System.String,System.Int64,System.Threading.CancellationToken)">
             <summary>
             findOneDetail
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.FindOneDetailWithHttpInfoAsync(System.String,System.Int64,System.Threading.CancellationToken)">
             <summary>
             findOneDetail
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Project)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.ListAsync(System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Project&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.ListWithHttpInfoAsync(System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Project&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.UpdateAsync(System.Int64,Com.Gridly.Model.UpdateProject,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.IProjectApi.UpdateWithHttpInfoAsync(System.Int64,Com.Gridly.Model.UpdateProject,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Project)</returns>
            </member>
        <member name="T:Com.Gridly.Api.ProjectApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ProjectApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ProjectApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ProjectApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.ProjectApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.ProjectApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.Create(Com.Gridly.Model.CreateProject)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <returns>Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.CreateWithHttpInfo(Com.Gridly.Model.CreateProject)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <returns>ApiResponse of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.CreateAsync(Com.Gridly.Model.CreateProject,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.CreateWithHttpInfoAsync(Com.Gridly.Model.CreateProject,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="createProject">createProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Project)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.Delete(System.Int64)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.DeleteWithHttpInfo(System.Int64)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.DeleteAsync(System.Int64,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.DeleteWithHttpInfoAsync(System.Int64,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.FindOneDetail(System.String,System.Int64)">
             <summary>
             findOneDetail 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <returns>Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.FindOneDetailWithHttpInfo(System.String,System.Int64)">
             <summary>
             findOneDetail 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <returns>ApiResponse of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.FindOneDetailAsync(System.String,System.Int64,System.Threading.CancellationToken)">
             <summary>
             findOneDetail 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.FindOneDetailWithHttpInfoAsync(System.String,System.Int64,System.Threading.CancellationToken)">
             <summary>
             findOneDetail 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="expand">expand</param>
             <param name="projectId">projectId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Project)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.List">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>List&lt;Project&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.ListWithHttpInfo">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <returns>ApiResponse of List&lt;Project&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.ListAsync(System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Project&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.ListWithHttpInfoAsync(System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Project&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.Update(System.Int64,Com.Gridly.Model.UpdateProject)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <returns>Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.UpdateWithHttpInfo(System.Int64,Com.Gridly.Model.UpdateProject)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <returns>ApiResponse of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.UpdateAsync(System.Int64,Com.Gridly.Model.UpdateProject,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Project</returns>
            </member>
        <member name="M:Com.Gridly.Api.ProjectApi.UpdateWithHttpInfoAsync(System.Int64,Com.Gridly.Model.UpdateProject,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="projectId">projectId</param>
             <param name="updateProject">updateProject</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Project)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IViewColumnApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.Add(System.String,System.String)">
             <summary>
             add
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.AddWithHttpInfo(System.String,System.String)">
             <summary>
             add
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.Create(System.String,Com.Gridly.Model.CreateColumn)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateColumn)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.Delete(System.String,System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.DeleteWithHttpInfo(System.String,System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.Get(System.String,System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.Remove(System.String,System.String)">
             <summary>
             remove
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.RemoveWithHttpInfo(System.String,System.String)">
             <summary>
             remove
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.Update(System.String,System.String,Com.Gridly.Model.UpdateColumn)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.UpdateWithHttpInfo(System.String,System.String,Com.Gridly.Model.UpdateColumn)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.AddAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             add
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.AddWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             add
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.CreateAsync(System.String,Com.Gridly.Model.CreateColumn,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateColumn,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.DeleteWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.GetWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.RemoveAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             remove
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.RemoveWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             remove
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.UpdateAsync(System.String,System.String,Com.Gridly.Model.UpdateColumn,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewColumnApi.UpdateWithHttpInfoAsync(System.String,System.String,Com.Gridly.Model.UpdateColumn,System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="T:Com.Gridly.Api.ViewColumnApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewColumnApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewColumnApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewColumnApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.ViewColumnApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.ViewColumnApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.Add(System.String,System.String)">
             <summary>
             add 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.AddWithHttpInfo(System.String,System.String)">
             <summary>
             add 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.AddAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             add 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.AddWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             add 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.Create(System.String,Com.Gridly.Model.CreateColumn)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateColumn)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.CreateAsync(System.String,Com.Gridly.Model.CreateColumn,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateColumn,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createColumn">createColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.Delete(System.String,System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.DeleteWithHttpInfo(System.String,System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.DeleteWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.Get(System.String,System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.GetWithHttpInfo(System.String,System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.GetWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.Remove(System.String,System.String)">
             <summary>
             remove 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.RemoveWithHttpInfo(System.String,System.String)">
             <summary>
             remove 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.RemoveAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             remove 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.RemoveWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             remove 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.Update(System.String,System.String,Com.Gridly.Model.UpdateColumn)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <returns>ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.UpdateWithHttpInfo(System.String,System.String,Com.Gridly.Model.UpdateColumn)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <returns>ApiResponse of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.UpdateAsync(System.String,System.String,Com.Gridly.Model.UpdateColumn,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ViewColumn</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewColumnApi.UpdateWithHttpInfoAsync(System.String,System.String,Com.Gridly.Model.UpdateColumn,System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="columnId">columnId</param>
             <param name="viewId">viewId</param>
             <param name="updateColumn">updateColumn</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (ViewColumn)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IRecordApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.Create(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.CreateWithHttpInfo(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.Delete(System.String,Com.Gridly.Model.DeleteRecord)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.DeleteWithHttpInfo(System.String,Com.Gridly.Model.DeleteRecord)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.Fetch(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             fetch
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.FetchWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             fetch
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.Update(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.UpdateWithHttpInfo(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.UpdateRecord(System.String,System.String,Com.Gridly.Model.SetRecord)">
             <summary>
             updateRecord
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <returns>Record</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.UpdateRecordWithHttpInfo(System.String,System.String,Com.Gridly.Model.SetRecord)">
             <summary>
             updateRecord
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <returns>ApiResponse of Record</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.CreateAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.CreateWithHttpInfoAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.DeleteAsync(System.String,Com.Gridly.Model.DeleteRecord,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.DeleteWithHttpInfoAsync(System.String,Com.Gridly.Model.DeleteRecord,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.FetchAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             fetch
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.FetchWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             fetch
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.UpdateAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.UpdateWithHttpInfoAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             update
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.UpdateRecordAsync(System.String,System.String,Com.Gridly.Model.SetRecord,System.Threading.CancellationToken)">
             <summary>
             updateRecord
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Record</returns>
            </member>
        <member name="M:Com.Gridly.Api.IRecordApi.UpdateRecordWithHttpInfoAsync(System.String,System.String,Com.Gridly.Model.SetRecord,System.Threading.CancellationToken)">
             <summary>
             updateRecord
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Record)</returns>
            </member>
        <member name="T:Com.Gridly.Api.RecordApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.RecordApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.RecordApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.RecordApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.RecordApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.RecordApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.Create(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.CreateWithHttpInfo(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.CreateAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.CreateWithHttpInfoAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="createRecordDTOs">createRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.Delete(System.String,Com.Gridly.Model.DeleteRecord)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.DeleteWithHttpInfo(System.String,Com.Gridly.Model.DeleteRecord)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.DeleteAsync(System.String,Com.Gridly.Model.DeleteRecord,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.DeleteWithHttpInfoAsync(System.String,Com.Gridly.Model.DeleteRecord,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="deleteRecordDTO">deleteRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.Fetch(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             fetch 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.FetchWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             fetch 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.FetchAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             fetch 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.FetchWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             fetch 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.Update(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.UpdateWithHttpInfo(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord})">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.UpdateAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.UpdateWithHttpInfoAsync(System.String,System.Collections.Generic.List{Com.Gridly.Model.SetRecord},System.Threading.CancellationToken)">
             <summary>
             update 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTOs">updateRecordDTOs</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.UpdateRecord(System.String,System.String,Com.Gridly.Model.SetRecord)">
             <summary>
             updateRecord 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <returns>Record</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.UpdateRecordWithHttpInfo(System.String,System.String,Com.Gridly.Model.SetRecord)">
             <summary>
             updateRecord 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <returns>ApiResponse of Record</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.UpdateRecordAsync(System.String,System.String,Com.Gridly.Model.SetRecord,System.Threading.CancellationToken)">
             <summary>
             updateRecord 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Record</returns>
            </member>
        <member name="M:Com.Gridly.Api.RecordApi.UpdateRecordWithHttpInfoAsync(System.String,System.String,Com.Gridly.Model.SetRecord,System.Threading.CancellationToken)">
             <summary>
             updateRecord 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="id">id</param>
             <param name="viewId">viewId</param>
             <param name="updateRecordDTO">updateRecordDTO</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Record)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IViewFileApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.Download(System.String,System.String)">
             <summary>
             download
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <returns>Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.DownloadWithHttpInfo(System.String,System.String)">
             <summary>
             download
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.Upload(System.String,System.Object,System.IO.Stream,System.Object)">
             <summary>
             upload
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <returns>UploadedFile</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.UploadWithHttpInfo(System.String,System.Object,System.IO.Stream,System.Object)">
             <summary>
             upload
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <returns>ApiResponse of UploadedFile</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.UploadZip(System.String,System.Object,System.Object)">
             <summary>
             uploadZip
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.UploadZipWithHttpInfo(System.String,System.Object,System.Object)">
             <summary>
             uploadZip
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.DownloadAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             download
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.DownloadWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             download
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Object)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.UploadAsync(System.String,System.Object,System.IO.Stream,System.Object,System.Threading.CancellationToken)">
             <summary>
             upload
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of UploadedFile</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.UploadWithHttpInfoAsync(System.String,System.Object,System.IO.Stream,System.Object,System.Threading.CancellationToken)">
             <summary>
             upload
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (UploadedFile)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.UploadZipAsync(System.String,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             uploadZip
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewFileApi.UploadZipWithHttpInfoAsync(System.String,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             uploadZip
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="T:Com.Gridly.Api.ViewFileApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewFileApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewFileApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewFileApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.ViewFileApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.ViewFileApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.Download(System.String,System.String)">
             <summary>
             download 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <returns>Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.DownloadWithHttpInfo(System.String,System.String)">
             <summary>
             download 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <returns>ApiResponse of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.DownloadAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             download 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.DownloadWithHttpInfoAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             download 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="fileId">fileId</param>
             <param name="viewId">viewId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Object)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.Upload(System.String,System.Object,System.IO.Stream,System.Object)">
             <summary>
             upload 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <returns>UploadedFile</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.UploadWithHttpInfo(System.String,System.Object,System.IO.Stream,System.Object)">
             <summary>
             upload 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <returns>ApiResponse of UploadedFile</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.UploadAsync(System.String,System.Object,System.IO.Stream,System.Object,System.Threading.CancellationToken)">
             <summary>
             upload 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of UploadedFile</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.UploadWithHttpInfoAsync(System.String,System.Object,System.IO.Stream,System.Object,System.Threading.CancellationToken)">
             <summary>
             upload 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file">file</param>
             <param name="recordId">recordId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (UploadedFile)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.UploadZip(System.String,System.Object,System.Object)">
             <summary>
             uploadZip 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <returns>List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.UploadZipWithHttpInfo(System.String,System.Object,System.Object)">
             <summary>
             uploadZip 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <returns>ApiResponse of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.UploadZipAsync(System.String,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             uploadZip 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Record&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewFileApi.UploadZipWithHttpInfoAsync(System.String,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             uploadZip 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnId">columnId</param>
             <param name="file"> (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Record&gt;)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IVersionControlApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.Create(System.String,Com.Gridly.Model.CreateBranch)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <returns>Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateBranch)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <returns>ApiResponse of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.Delete(System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.DeleteWithHttpInfo(System.String)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.Get(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns>Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.GetWithHttpInfo(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns>ApiResponse of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.List(System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>List&lt;Branch&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.ListWithHttpInfo(System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of List&lt;Branch&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.Merge(System.String,System.String,System.Collections.Generic.List{System.String})">
             <summary>
             merge
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.MergeWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String})">
             <summary>
             merge
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.CreateAsync(System.String,Com.Gridly.Model.CreateBranch,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateBranch,System.Threading.CancellationToken)">
             <summary>
             create
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Branch)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.DeleteAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.DeleteWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Branch)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.ListAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Branch&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.ListWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Branch&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.MergeAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
             <summary>
             merge
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IVersionControlApi.MergeWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
             <summary>
             merge
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="T:Com.Gridly.Api.VersionControlApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.VersionControlApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.VersionControlApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.VersionControlApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.VersionControlApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.VersionControlApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.Create(System.String,Com.Gridly.Model.CreateBranch)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <returns>Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.CreateWithHttpInfo(System.String,Com.Gridly.Model.CreateBranch)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <returns>ApiResponse of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.CreateAsync(System.String,Com.Gridly.Model.CreateBranch,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.CreateWithHttpInfoAsync(System.String,Com.Gridly.Model.CreateBranch,System.Threading.CancellationToken)">
             <summary>
             create 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="createBranch">createBranch</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Branch)</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.Delete(System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.DeleteWithHttpInfo(System.String)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.DeleteAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.DeleteWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             delete 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.Get(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns>Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.GetWithHttpInfo(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <returns>ApiResponse of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Branch</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Branch)</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.List(System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>List&lt;Branch&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.ListWithHttpInfo(System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <returns>ApiResponse of List&lt;Branch&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.ListAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;Branch&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.ListWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="gridId">gridId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;Branch&gt;)</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.Merge(System.String,System.String,System.Collections.Generic.List{System.String})">
             <summary>
             merge 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.MergeWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String})">
             <summary>
             merge 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.MergeAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
             <summary>
             merge 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.VersionControlApi.MergeWithHttpInfoAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
             <summary>
             merge 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId</param>
             <param name="destinationBranchId">destinationBranchId</param>
             <param name="mergeRecordOptions">mergeRecordOptions (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="T:Com.Gridly.Api.ITaskApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ITaskApi.Get(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <returns>Task</returns>
            </member>
        <member name="M:Com.Gridly.Api.ITaskApi.GetWithHttpInfo(System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <returns>ApiResponse of Task</returns>
            </member>
        <member name="M:Com.Gridly.Api.ITaskApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Task</returns>
            </member>
        <member name="M:Com.Gridly.Api.ITaskApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Task)</returns>
            </member>
        <member name="T:Com.Gridly.Api.TaskApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.TaskApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.TaskApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.TaskApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.TaskApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.TaskApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.Get(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <returns>Task</returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.GetWithHttpInfo(System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <returns>ApiResponse of Task</returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.GetAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Task</returns>
            </member>
        <member name="M:Com.Gridly.Api.TaskApi.GetWithHttpInfoAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="taskId">taskId</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Task)</returns>
            </member>
        <member name="T:Com.Gridly.Api.IViewApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.Export(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             export
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <returns>Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ExportWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             export
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <returns>ApiResponse of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.Get(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>View</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.GetWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>ApiResponse of View</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ImportView(System.String,System.IO.Stream,System.Object,System.Object)">
             <summary>
             importView
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ImportViewWithHttpInfo(System.String,System.IO.Stream,System.Object,System.Object)">
             <summary>
             importView
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.List(System.String,System.String,System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <returns>List&lt;View&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ListWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <returns>ApiResponse of List&lt;View&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ExportAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             export
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ExportWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             export
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Object)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.GetAsync(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of View</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.GetWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (View)</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ImportViewAsync(System.String,System.IO.Stream,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             importView
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ImportViewWithHttpInfoAsync(System.String,System.IO.Stream,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             importView
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;View&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.IViewApi.ListWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list
             </summary>
             <remarks>
             
             </remarks>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;View&gt;)</returns>
            </member>
        <member name="T:Com.Gridly.Api.ViewApi">
             <summary>
             Represents a collection of functions to interact with the API endpoints
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewApi" /> class.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewApi" /> class
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Api.ViewApi" /> class
             using Configuration object
             </summary>
             <param name="configuration">An instance of Configuration</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.SetBasePath(System.String)">
             <summary>
             Sets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Api.ViewApi.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="P:Com.Gridly.Api.ViewApi.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <returns>Dictionary of HTTP header</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.Export(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             export 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <returns>Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ExportWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             export 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <returns>ApiResponse of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ExportAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             export 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of Object</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ExportWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             export 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="type">type (optional, default to csv)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (Object)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.Get(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>View</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.GetWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <returns>ApiResponse of View</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.GetAsync(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of View</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.GetWithHttpInfoAsync(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             get 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="columnIds">columnIds (optional)</param>
             <param name="include">include (optional)</param>
             <param name="page">page (optional, default to "{}")</param>
             <param name="query">query (optional, default to "{}")</param>
             <param name="sort">sort (optional, default to "{}")</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (View)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ImportView(System.String,System.IO.Stream,System.Object,System.Object)">
             <summary>
             importView 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ImportViewWithHttpInfo(System.String,System.IO.Stream,System.Object,System.Object)">
             <summary>
             importView 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <returns>ApiResponse of Object(void)</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ImportViewAsync(System.String,System.IO.Stream,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             importView 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of void</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ImportViewWithHttpInfoAsync(System.String,System.IO.Stream,System.Object,System.Object,System.Threading.CancellationToken)">
             <summary>
             importView 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="viewId">viewId</param>
             <param name="file">The following file types are supported: csv, tsv, xls, xlsx and JSON</param>
             <param name="importRequest">importRequest (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.List(System.String,System.String,System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <returns>List&lt;View&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ListWithHttpInfo(System.String,System.String,System.String)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <returns>ApiResponse of List&lt;View&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ListAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of List&lt;View&gt;</returns>
            </member>
        <member name="M:Com.Gridly.Api.ViewApi.ListWithHttpInfoAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             list 
             </summary>
             <exception cref="T:Com.Gridly.Client.ApiException">Thrown when fails to make API call</exception>
             <param name="branchId">branchId (optional)</param>
             <param name="gridId">gridId (optional)</param>
             <param name="type">type (optional)</param>
             <param name="cancellationToken">Cancellation Token to cancel request (optional) </param>
             <returns>Task of ApiResponse (List&lt;View&gt;)</returns>
            </member>
        <member name="T:Com.Gridly.Client.ApiClient">
             <summary>
             API client is mainly responsible for making the HTTP call to the API backend.
             </summary>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.InterceptRequest(RestSharp.IRestRequest)">
             <summary>
             Allows for extending request processing for <see cref="T:Com.Gridly.Client.ApiClient" /> generated code.
             </summary>
             <param name="request">The RestSharp request object</param>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.InterceptResponse(RestSharp.IRestRequest,RestSharp.IRestResponse)">
             <summary>
             Allows for extending response processing for <see cref="T:Com.Gridly.Client.ApiClient" /> generated code.
             </summary>
             <param name="request">The RestSharp request object</param>
             <param name="response">The RestSharp response object</param>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.ApiClient" /> class
             with default configuration.
             </summary>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.#ctor(Com.Gridly.Client.Configuration)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.ApiClient" /> class
             with default base path (https://api.gridly.com).
             </summary>
             <param name="config">An instance of Configuration.</param>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.ApiClient" /> class
             with default configuration.
             </summary>
             <param name="basePath">The base path.</param>
            </member>
        <member name="F:Com.Gridly.Client.ApiClient.Default">
             <summary>
             Gets or sets the default API client for making HTTP calls.
             </summary>
             <value>The default API client.</value>
            </member>
        <member name="P:Com.Gridly.Client.ApiClient.Configuration">
             <summary>
             Gets or sets an instance of the IReadableConfiguration.
             </summary>
             <value>An instance of the IReadableConfiguration.</value>
             <remarks>
             <see cref="T:Com.Gridly.Client.IReadableConfiguration" /> helps us to avoid modifying possibly global
             configuration values from within a given client. It does not guarantee thread-safety
             of the <see cref="T:Com.Gridly.Client.Configuration" /> instance in any way.
             </remarks>
            </member>
        <member name="P:Com.Gridly.Client.ApiClient.RestClient">
             <summary>
             Gets or sets the RestClient.
             </summary>
             <value>An instance of the RestClient</value>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
             <summary>
             Makes the HTTP request (Sync).
             </summary>
             <param name="path">URL path.</param>
             <param name="method">HTTP method.</param>
             <param name="queryParams">Query parameters.</param>
             <param name="postBody">HTTP body (POST request).</param>
             <param name="headerParams">Header parameters.</param>
             <param name="formParams">Form parameters.</param>
             <param name="fileParams">File parameters.</param>
             <param name="pathParams">Path parameters.</param>
             <param name="contentType">Content Type of the request</param>
             <returns>Object</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
             <summary>
             Makes the asynchronous HTTP request.
             </summary>
             <param name="path">URL path.</param>
             <param name="method">HTTP method.</param>
             <param name="queryParams">Query parameters.</param>
             <param name="postBody">HTTP body (POST request).</param>
             <param name="headerParams">Header parameters.</param>
             <param name="formParams">Form parameters.</param>
             <param name="fileParams">File parameters.</param>
             <param name="pathParams">Path parameters.</param>
             <param name="contentType">Content type.</param>
             <param name="cancellationToken">Cancellation Token.</param>
             <returns>The Task instance.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.EscapeString(System.String)">
             <summary>
             Escape string (url-encoded).
             </summary>
             <param name="str">String to be escaped.</param>
             <returns>Escaped string.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
             <summary>
             Create FileParameter based on Stream.
             </summary>
             <param name="name">Parameter name.</param>
             <param name="stream">Input stream.</param>
             <returns>FileParameter.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.ParameterToString(System.Object)">
             <summary>
             If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
             If parameter is a list, join the list with ",".
             Otherwise just return the string.
             </summary>
             <param name="obj">The parameter (header, path, query, form).</param>
             <returns>Formatted string.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
             <summary>
             Deserialize the JSON string into a proper object.
             </summary>
             <param name="response">The HTTP response.</param>
             <param name="type">Object type.</param>
             <returns>Object representation of the JSON string.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.Serialize(System.Object)">
             <summary>
             Serialize an input (model) into JSON string
             </summary>
             <param name="obj">Object.</param>
             <returns>JSON string.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.SelectHeaderContentType(System.String[])">
             <summary>
             Select the Content-Type header's value from the given content-type array:
             if JSON type exists in the given array, use it;
             otherwise use the first one defined in 'consumes'
             </summary>
             <param name="contentTypes">The Content-Type array to select from.</param>
             <returns>The Content-Type header to use.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.SelectHeaderAccept(System.String[])">
             <summary>
             Select the Accept header's value from the given accepts array:
             if JSON exists in the given array, use it;
             otherwise use all of them (joining into a string)
             </summary>
             <param name="accepts">The accepts array to select from.</param>
             <returns>The Accept header to use.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.Base64Encode(System.String)">
             <summary>
             Encode string in base64 format.
             </summary>
             <param name="text">String to be encoded.</param>
             <returns>Encoded string.</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.ConvertType(System.dynamic,System.Type)">
             <summary>
             Dynamically cast the object into target type.
             </summary>
             <param name="fromObject">Object to be casted</param>
             <param name="toObject">Target type</param>
             <returns>Casted object</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
             <summary>
             Convert stream to byte array
             </summary>
             <param name="inputStream">Input stream to be converted</param>
             <returns>Byte array</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.UrlEncode(System.String)">
             <summary>
             URL encode a string
             Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
             </summary>
             <param name="input">String to be URL encoded</param>
             <returns>Byte array</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.SanitizeFilename(System.String)">
             <summary>
             Sanitize filename by removing the path
             </summary>
             <param name="filename">Filename</param>
             <returns>Filename</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
             <summary>
             Convert params to key/value pairs.
             Use collectionFormat to properly format lists and collections.
             </summary>
             <param name="collectionFormat">Collection format.</param>
             <param name="name">Key name.</param>
             <param name="value">Value object.</param>
             <returns>A list of KeyValuePairs</returns>
            </member>
        <member name="M:Com.Gridly.Client.ApiClient.IsCollection(System.Object)">
             <summary>
             Check if generic object is a collection.
             </summary>
             <param name="value"></param>
             <returns>True if object is a collection type</returns>
            </member>
        <member name="T:Com.Gridly.Client.IReadableConfiguration">
             <summary>
             Represents a readable-only configuration contract.
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.AccessToken">
             <summary>
             Gets the access token.
             </summary>
             <value>Access token.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.ApiKey">
             <summary>
             Gets the API key.
             </summary>
             <value>API key.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.ApiKeyPrefix">
             <summary>
             Gets the API key prefix.
             </summary>
             <value>API key prefix.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.BasePath">
             <summary>
             Gets the base path.
             </summary>
             <value>Base path.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.DateTimeFormat">
             <summary>
             Gets the date time format.
             </summary>
             <value>Date time foramt.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.DefaultHeader">
             <summary>
             Gets the default header.
             </summary>
             <value>Default header.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.TempFolderPath">
             <summary>
             Gets the temp folder path.
             </summary>
             <value>Temp folder path.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.Timeout">
             <summary>
             Gets the HTTP connection timeout (in milliseconds)
             </summary>
             <value>HTTP connection timeout.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.UserAgent">
             <summary>
             Gets the user agent.
             </summary>
             <value>User agent.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.Username">
             <summary>
             Gets the username.
             </summary>
             <value>Username.</value>
            </member>
        <member name="P:Com.Gridly.Client.IReadableConfiguration.Password">
             <summary>
             Gets the password.
             </summary>
             <value>Password.</value>
            </member>
        <member name="M:Com.Gridly.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
             <summary>
             Gets the API key with prefix.
             </summary>
             <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
             <returns>API key with prefix.</returns>
            </member>
        <member name="T:Com.Gridly.Client.ApiResponse`1">
             <summary>
             API Response
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.ApiResponse`1.StatusCode">
             <summary>
             Gets or sets the status code (HTTP status code)
             </summary>
             <value>The status code.</value>
            </member>
        <member name="P:Com.Gridly.Client.ApiResponse`1.Headers">
             <summary>
             Gets or sets the HTTP headers
             </summary>
             <value>HTTP headers</value>
            </member>
        <member name="P:Com.Gridly.Client.ApiResponse`1.Data">
             <summary>
             Gets or sets the data (parsed HTTP body)
             </summary>
             <value>The data.</value>
            </member>
        <member name="M:Com.Gridly.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.ApiResponse`1" /> class.
             </summary>
             <param name="statusCode">HTTP status code.</param>
             <param name="headers">HTTP headers.</param>
             <param name="data">Data (parsed HTTP body)</param>
            </member>
        <member name="T:Com.Gridly.Client.Configuration">
             <summary>
             Represents a set of configuration settings
             </summary>
            </member>
        <member name="F:Com.Gridly.Client.Configuration.Version">
             <summary>
             Version of the package.
             </summary>
             <value>Version of the package.</value>
            </member>
        <member name="F:Com.Gridly.Client.Configuration.ISO8601_DATETIME_FORMAT">
             <summary>
             Identifier for ISO 8601 DateTime Format
             </summary>
             <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
            </member>
        <member name="F:Com.Gridly.Client.Configuration.DefaultExceptionFactory">
             <summary>
             Default creation of exceptions for a given method name and response object
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.Default">
             <summary>
             Gets or sets the default Configuration.
             </summary>
             <value>Configuration.</value>
            </member>
        <member name="F:Com.Gridly.Client.Configuration._apiKey">
             <summary>
             Gets or sets the API key based on the authentication name.
             </summary>
             <value>The API key.</value>
            </member>
        <member name="F:Com.Gridly.Client.Configuration._apiKeyPrefix">
             <summary>
             Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
             </summary>
             <value>The prefix of the API key.</value>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.Configuration" /> class
             </summary>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.Configuration" /> class
             </summary>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.#ctor(Com.Gridly.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.Configuration" /> class with different settings
             </summary>
             <param name="apiClient">Api client</param>
             <param name="defaultHeader">Dictionary of default HTTP header</param>
             <param name="username">Username</param>
             <param name="password">Password</param>
             <param name="accessToken">accessToken</param>
             <param name="apiKey">Dictionary of API key</param>
             <param name="apiKeyPrefix">Dictionary of API key prefix</param>
             <param name="tempFolderPath">Temp folder path</param>
             <param name="dateTimeFormat">DateTime format string</param>
             <param name="timeout">HTTP connection timeout (in milliseconds)</param>
             <param name="userAgent">HTTP user agent</param>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.#ctor(Com.Gridly.Client.ApiClient)">
             <summary>
             Initializes a new instance of the Configuration class.
             </summary>
             <param name="apiClient">Api client.</param>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.ApiClient">
             <summary>
             Gets an instance of an ApiClient for this configuration
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.BasePath">
             <summary>
             Gets or sets the base path for API access.
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.DefaultHeader">
             <summary>
             Gets or sets the default header.
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.Timeout">
             <summary>
             Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.UserAgent">
             <summary>
             Gets or sets the HTTP user agent.
             </summary>
             <value>Http user agent.</value>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.Username">
             <summary>
             Gets or sets the username (HTTP basic authentication).
             </summary>
             <value>The username.</value>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.Password">
             <summary>
             Gets or sets the password (HTTP basic authentication).
             </summary>
             <value>The password.</value>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.GetApiKeyWithPrefix(System.String)">
             <summary>
             Gets the API key with prefix.
             </summary>
             <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
             <returns>API key with prefix.</returns>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.AccessToken">
             <summary>
             Gets or sets the access token for OAuth2 authentication.
             </summary>
             <value>The access token.</value>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.TempFolderPath">
             <summary>
             Gets or sets the temporary folder path to store the files downloaded from the server.
             </summary>
             <value>Folder path.</value>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.DateTimeFormat">
             <summary>
             Gets or sets the date time format used when serializing in the ApiClient
             By default, it's set to ISO 8601 - "o", for others see:
             https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
             and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
             No validation is done to ensure that the string you're providing is valid
             </summary>
             <value>The DateTimeFormat string</value>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.ApiKeyPrefix">
             <summary>
             Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
             </summary>
             <value>The prefix of the API key.</value>
            </member>
        <member name="P:Com.Gridly.Client.Configuration.ApiKey">
             <summary>
             Gets or sets the API key based on the authentication name.
             </summary>
             <value>The API key.</value>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.AddDefaultHeader(System.String,System.String)">
             <summary>
             Add default header.
             </summary>
             <param name="key">Header field name.</param>
             <param name="value">Header field value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.CreateApiClient">
             <summary>
             Creates a new <see cref="T:Com.Gridly.Client.ApiClient" /> based on this <see cref="T:Com.Gridly.Client.Configuration" /> instance.
             </summary>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.ToDebugReport">
             <summary>
             Returns a string with essential information for debugging.
             </summary>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.AddApiKey(System.String,System.String)">
             <summary>
             Add Api Key Header.
             </summary>
             <param name="key">Api Key name.</param>
             <param name="value">Api Key value.</param>
             <returns></returns>
            </member>
        <member name="M:Com.Gridly.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
             <summary>
             Sets the API key prefix.
             </summary>
             <param name="key">Api Key name.</param>
             <param name="value">Api Key value.</param>
            </member>
        <member name="T:Com.Gridly.Client.ApiException">
             <summary>
             API Exception
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.ApiException.ErrorCode">
             <summary>
             Gets or sets the error code (HTTP status code)
             </summary>
             <value>The error code (HTTP status code).</value>
            </member>
        <member name="P:Com.Gridly.Client.ApiException.ErrorContent">
             <summary>
             Gets or sets the error content (body json object)
             </summary>
             <value>The error content (Http response body).</value>
            </member>
        <member name="M:Com.Gridly.Client.ApiException.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.ApiException" /> class.
             </summary>
            </member>
        <member name="M:Com.Gridly.Client.ApiException.#ctor(System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
            </member>
        <member name="M:Com.Gridly.Client.ApiException.#ctor(System.Int32,System.String,System.dynamic)">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.ApiException" /> class.
             </summary>
             <param name="errorCode">HTTP status code.</param>
             <param name="message">Error message.</param>
             <param name="errorContent">Error content.</param>
            </member>
        <member name="T:Com.Gridly.Client.IApiAccessor">
             <summary>
             Represents configuration aspects required to interact with the API endpoints.
             </summary>
            </member>
        <member name="P:Com.Gridly.Client.IApiAccessor.Configuration">
             <summary>
             Gets or sets the configuration object
             </summary>
             <value>An instance of the Configuration</value>
            </member>
        <member name="M:Com.Gridly.Client.IApiAccessor.GetBasePath">
             <summary>
             Gets the base path of the API client.
             </summary>
             <value>The base path</value>
            </member>
        <member name="P:Com.Gridly.Client.IApiAccessor.ExceptionFactory">
             <summary>
             Provides a factory method hook for the creation of exceptions.
             </summary>
            </member>
        <member name="T:Com.Gridly.Client.GlobalConfiguration">
             <summary>
             <see cref="T:Com.Gridly.Client.GlobalConfiguration" /> provides a compile-time extension point for globally configuring
             API Clients.
             </summary>
             <remarks>
             A customized implementation via partial class may reside in another file and may
             be excluded from automatic generation via a .openapi-generator-ignore file.
             </remarks>
            </member>
        <member name="T:Com.Gridly.Client.OpenAPIDateConverter">
             <summary>
             Formatter for 'date' openapi formats ss defined by full-date - RFC3339
             see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
             </summary>
            </member>
        <member name="M:Com.Gridly.Client.OpenAPIDateConverter.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Com.Gridly.Client.OpenAPIDateConverter" /> class.
             </summary>
            </member>
        <member name="T:Com.Gridly.Client.ExceptionFactory">
             <summary>
             A delegate to ExceptionFactory method
             </summary>
             <param name="methodName">Method name</param>
             <param name="response">Response</param>
             <returns>Exceptions</returns>
            </member>
    </members>
</doc>
